@model GeoMedia_Proyecto.Models.tblArchivo

@{
    ViewBag.Title = "Insertar";
    if (Session["sesion"] == null)
    {
        Response.Redirect("~/GeoHome/Index");
    }
    else
    {
        if (Session["idRol"].Equals(2))
        {
            Response.Redirect("~/GeoHome/Index");
        }
    }
}
<div class="prt-body">
    <h2>@ViewBag.Title nuevo Producto multimedia</h2>

    @using (Html.BeginForm())
    {
        try
        {
            @Html.AntiForgeryToken()
        }
        catch (Exception)
        {

            Response.Redirect("~/GeoHome/Index");
        }


        <div class="form-horizontal" style="padding-left: 2.5em;">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @{
                if (!string.IsNullOrEmpty(ViewBag.message))
                {
                    <div class="alert">
                        <span class="closebtn" onclick="this.parentElement.style.display = 'none';">&times;</span>
                        @ViewBag.message
                    </div>
                }
            }
            <div class="form-group">
                @Html.LabelFor(model => model.idArchivo)
                <div>
                    @Html.EditorFor(model => model.idArchivo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idArchivo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.titulo)
                <div>
                    @Html.EditorFor(model => model.titulo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.titulo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idTipoFile, "idTipoFile")
                <div>
                    @Html.DropDownList("idTipoFile", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idTipoFile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.formato)
                <div>
                    @Html.EditorFor(model => model.formato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.formato, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.precio)
                <div>
                    @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ruta)
                <div>
                    @Html.EditorFor(model => model.ruta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ruta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.detalles)
                <div>
                    @Html.EditorFor(model => model.detalles, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.detalles, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.sinopsis)
                <div>
                    @Html.EditorFor(model => model.sinopsis, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.sinopsis, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.codCategoria, "codCategoria")
                <div>
                    @Html.DropDownList("codCategoria", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.codCategoria, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div>
                    <input type="submit" value="Guardar" class="btn btn-success" />
                    <input type="button" value="Regresar" class="btn btn-default" onclick="document.location.href='@Url.Content("~/tblArchivoes/Index")'" />
                </div>
            </div>
        </div>
    }
</div>